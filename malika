

//-------------------------------------------------------------------------------------------------------------------------------
//----------------------fonction qui recherche si un mot existe dans un arbre --------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------


  bool trouver(char *mot , node *tr ) {
   if(tr == NULL){
   //------------------- le cas ou l'arbre est vide----------
    return false ;
	}
       //------------ le cas ou le mot existe deja dans l'arbre-------------
    if(strcmp(mot ,tr->word)== 0){
            // mot = tr->word
    return true;
    
    }else {
	// le cas ou le mot  n'existe pas {la racine } on teste s'il exist dans les noeuds

    if(strlen (mot) <  strlen(tr->word)){

	return trouver(mot, tr -> left);	// si la taille (mot ) < taille (tr -> word) on cherhche dans le fils gauche
    }else{

    return trouver(mot, tr-> right); // si la taille (mot ) > taille (tr -> word) on cherhche dans le fils droite
}}}

 --------------------------------------------- la partie de l'lgorithme principal ------------------------------------------------------

 int main {     


char m1, m2 ;
int m , n ,i ,j ;
int T1,T2 [100] ;


printf (" veuillez entrez la phrase que vous voullez rechercher ");
scanf ("%c%c", &m1&m2 );




//-------------------------------------------------------------------------------------------------------------------------------
//----------------------la recherche de l'existance d'une phrase dans un fichier texte --------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------------------

 
  if (( m1 < tr->word ) && (m2 < tr->word )) {
  return trouver ( m1 , tr->left ) ; T1 = tr->occur ;
  return trouver ( m2 , tr->left ) ; T2 = tr->occur ;
  else  {               // si les mots existent dans la racine ou bien le fils droite on affiche leurs tableaux d'occurrence  
   T1 = tr->occur ;
   T2 = tr->occur ; 
   }}
    n = sizeof (T1) ;
    m = sizeof(T2) ;
    
    for ( i=1 ; i<n ; i++ ){
         for ( j=1 ; j<n ; j++ ){
                  if ( T1[i] == T2[j] ) {
      
printf (" la phrase existe dans le fichier dans la ligne %d ", T1[i]);
}
else {

 printf (" la phrase n'existe pas dans le fichier ");
      }
   }   
}
